#!/usr/bin/perl

use EPrints;
use Switch;

my $repository = EPrints->new->current_repository;
my $eprintid = $repository->param("eprintid");
my @astorids = $repository->param('astorids[]');      
my $security = $repository->param("security");
my $license = $repository->param("license");
my $de_year = $repository->param("date_embargo_year");
my $de_month = $repository->param("date_embargo_month");
my $de_day = $repository->param("date_embargo_day");

die("EPrintid is malformed: $eprintid") unless($eprintid=~ /^\d+$/);
#TODO check against namedset
die("Security is not known: $security") unless(grep $_ eq $security, qw(public validuser staffonly));
#die("License is not known: $license") unless(grep $_ eq $license, qw());
die("Lisence is malformed: $license") unless($license=~ /^[\w_]+$/);
my $de = undef;
if($de_year){
	die("Date embargo year is malformed: $de_year") unless($de_year=~ /^\d+$/);
	$de = $de_year;
	if($de_month){
		die("Date embargo month is malformed: $de_month") unless($de_month=~ /^\d+$/);
		$de .="-$de_month";
		if($de_day){
			die("Date embargo day is malformed: $de_day") unless($de_day=~ /^\d+$/);
			$de .="-$de_day";
		}
	}
}
my $eprint = EPrints::DataObj::EPrint->new( $repository, $eprintid );

#Lets modify the document md
for my $doc($eprint->get_all_documents){
	next if(!$doc->is_set("astorid")); #ignore local documents
	next if(!grep $_ eq $doc->value("astorid"), @astorids); #ignore unselected docs
	$doc->set_value("security",$security);
	$doc->set_value("license",$license);
	$doc->set_value("date_embargo",$de);
	$doc->commit;
}

## Return json for all documents
my $plugin = $repository->plugin( "Export::ArkivumFiles" );
my $list = $repository->get_dataset("document")->search(filters => [
				{ meta_fields => [qw( eprintid )], value => $eprintid },
			]);
$plugin->initialise_fh( \*STDOUT );	
$repository->send_http_header( "content_type"=>$plugin->param("mimetype") );
#$plugin->output_list( fh=>\*STDOUT, list=>$list );
print $plugin->output_dataobj( $eprint );

